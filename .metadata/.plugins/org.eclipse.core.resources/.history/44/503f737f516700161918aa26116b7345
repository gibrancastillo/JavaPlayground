package com.ccc.messenger.service;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import com.ccc.messenger.dao.DatabaseClass;
import com.ccc.messenger.model.Message;

/**
 * A Service (stub) class to interact with the Data Access class (could use JDBC, JPA, Spring, Hibernate, etc).
 * 
 * Using an in memory Map to behave like a database, to support all the CRUD operations.
 * Create:  POST
 * Read:    GET
 * Update:  PUT
 * Delete:  DELETE
 * 
 * @author gecasti
 *
 */
public class MessageService {
	private Map<Long, Message> messages = DatabaseClass.getMessages();
	
	public MessageService() {
		messages.put(1L, new Message(1, "Hola Mundo!", "gibran"));
		messages.put(2L, new Message(2, "Hola Jersey", "gibran"));
	}
	
	public List<Message> getAllMessages() {
		// Parsing a collection to the ArrayList constructor initialized the List with those elements!
		return new ArrayList<Message>(messages.values());
	}
	
	public Message getMessage(long id) {
		return messages.get(id);
	}
	
	public Message addMessage(Message message) {
		message.setId(messages.size() + 1);
		messages.put(message.getId(), message);
		return message;
	}
	
	public Message updateMessage(Message message) {
		if(message.getId() <= 0) {
			return null;
		}
		
		messages.put(message.getId(), message);
		
		return message;
	}
	
	public Message removeMessage(long id) {
		return messages.remove(id);
	}
}