package com.ccc.messenger.model;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlTransient;

/**
 * A model class (object), which is an Entity class
 * Annotated this model class with javax.xml.bind.annotation.XmlRootElement so that JAX-RS within Jersey
 * will use JAXB (Java Architecture for XML Binding) to convert the Message object to XML and vice versa.
 * JAXB comes bundle with Java Standard Edition
 * 
 * Jersey honors the annotation @XmlRootElement to convert the Message object to JSON and vice versa.
 * 
 * @author gecasti
 *
 */
@XmlRootElement
public class Message {
	private long id;
	private String message;
	private Date created;
	private String author;
	
	/*
	 * A 'Map' of the commentId and Comment instance, because every Message instance has 0 or more comments.
	 * A Message instance has a Map of commentId to the Comment instance.
	 */
	private Map<Long, Comment> comments = new HashMap<>();
	
	/**
	 * Needed by JAXB to convert the Message object to XML or JSON and vice versa.
	 * We need to de-serialize and serialize the ErrorMessage.
	 */
	public Message() {
		
	}
	
	/**
	 * The three arguments in this constructor allow us create this instances on the fly.
	 * 
	 * @param id
	 * @param message
	 * @param author
	 */
	public Message(long id, String message, String author) {
		this.id = id;
		this.message = message;
		this.author = author;
		this.created = new Date();
	}
	
	public long getId() {
		return id;
	}
	
	public void setId(long id) {
		this.id = id;
	}
	
	public String getMessage() {
		return message;
	}
	
	public void setMessage(String message) {
		this.message = message;
	}
	
	public Date getCreated() {
		return created;
	}
	
	public void setCreated(Date created) {
		this.created = created;
	}
	
	public String getAuthor() {
		return author;
	}
	
	public void setAuthor(String author) {
		this.author = author;
	}
	
	/**
	 * This method was marked with the @XmlTransient annotation because we don't want the comment list (comment data) to
	 * show up when the Message instance is retrieve by the API method call to getMessage() or getMessages().  We don't want
	 * the list of all the comments when we you access a Message.  You want the Comment list to be ignore when the Message
	 * instance is been converted to XML or JSON and the way to do that is by marking this method as @XmlTransient, this marks
	 * it as ignore for XML conversion but event JSON conversion is honor.
	 * 
	 * @return
	 */
	@XmlTransient
	public Map<Long, Comment> getComments() {
		return comments;
	}
	
	public void setComments(Map<Long, Comment> comments) {
		this.comments = comments;
	}
	
	@Override
	public String toString() {
		return "";
	}
}